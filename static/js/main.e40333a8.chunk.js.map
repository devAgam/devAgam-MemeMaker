{"version":3,"sources":["components/TopHeader.jsx","components/Loader.jsx","components/Templates.jsx","components/Github.jsx","components/MyProfile.jsx","components/Body.jsx","App.js","index.js"],"names":["TopHeader","Header","as","icon","textAlign","Content","LoaderComp","Dimmer","active","inverted","Loader","Templates","useState","memes","setMemes","useEffect","fetch","then","res","json","_memes","data","array","i","length","j","Math","floor","random","temp","shuffleMemes","console","log","map","temps","className","Image","src","url","Github","List","divided","relaxed","Item","Icon","name","size","verticalAlign","MyProfile","circular","Component","panes","menuItem","render","TabExampleVerticalTabular","Tab","menu","color","fluid","vertical","tabular","App","Body","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e40333a8.chunk.js","sourcesContent":["import React from 'react'\nimport { Header, Icon, Image } from 'semantic-ui-react'\n\nconst TopHeader = () => (\n  <div>\n    <Header as='h2' icon textAlign='center'>\n      <Header.Content>MemeMaker by devAgam</Header.Content>\n    </Header>\n  </div>\n)\n\nexport default TopHeader","import React from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nconst LoaderComp = () => (\n  <div>\n\n\n      <Dimmer active inverted>\n        <Loader inverted>Loading</Loader>\n      </Dimmer>\n\n  </div>\n)\n\nexport default LoaderComp","import React, { useEffect, useState } from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport { LazyLoad } from \"react-lazy-load\";\nimport LoaderComp from \"./Loader\";\n\nconst Templates = () => {\n  const [memes, setMemes] = useState([]);\n  const [memeIndex, setMemeIndex] = useState(0);\n\n  const shuffleMemes = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then((res) => {\n      res.json().then((res) => {\n        const _memes = res.data.memes;\n        shuffleMemes(_memes);\n        setMemes(_memes);\n        console.log(_memes);\n      });\n    });\n  }, []);\n\n  return memes.length ? (\n    <div>\n      {memes &&\n        memes.map((temps) => (\n          <div className=\"column\">\n            <Image src={temps.url} />\n          </div>\n        ))}\n    </div>\n  ) : (\n    <LoaderComp />\n  );\n};\n\nexport default Templates;\n","import React from \"react\";\nimport { List } from \"semantic-ui-react\";\n\nconst Github = () => (\n  <List divided relaxed>\n    <List.Item>\n      <List.Icon name=\"github\" size=\"large\" verticalAlign=\"middle\" />\n      <List.Content>\n        <List.Header as=\"a\">devAgam/devAgam-MemeMaker</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <List.Icon name=\"github\" size=\"large\" verticalAlign=\"middle\" />\n      <List.Content>\n        <List.Header as=\"a\">devAgam/Convert-Audio-Channel</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <List.Icon name=\"github\" size=\"large\" verticalAlign=\"middle\" />\n      <List.Content>\n        <List.Header as=\"a\">devAgam/Delete-text-in-python</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <List.Icon name=\"github\" size=\"large\" verticalAlign=\"middle\" />\n      <List.Content>\n        <List.Header as=\"a\">devAgam/Who-Is-It</List.Header>\n      </List.Content>\n    </List.Item>\n    <List.Item>\n      <List.Icon name=\"github\" size=\"large\" verticalAlign=\"middle\" />\n      <List.Content>\n        <List.Header as=\"a\">devAgam/GoogleMeet-Bomb</List.Header>\n      </List.Content>\n    </List.Item>\n  </List>\n);\n\nexport default Github;\n","import React, { Component } from \"react\";\nimport Github from './Github.jsx'\nimport { Image, Header } from \"semantic-ui-react\";\nexport default class MyProfile extends Component {\n  render() {\n    return (\n      <div>\n        <Header as=\"h2\">\n          <Image\n            circular\n            src=\"https://avatars1.githubusercontent.com/u/46868711?s=460&u=e747900d977e184cbc5b47d651c930ad83feb677&v=4\"\n          />{\" \"}\n          devAgam\n        </Header>\n        <Header as='h1'>Other Projects</Header>\n        <Github />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport Templates from \"./Templates\";\nimport MyProfile from \"./MyProfile\";\nconst panes = [\n  { menuItem: \"Templates\", render: () => <Templates /> },\n  { menuItem: \"My Profile\", render: () => <MyProfile /> },\n];\n\nconst TabExampleVerticalTabular = () => (\n  <Tab\n    menu={{ color: \"blue\", fluid: true, vertical: true, tabular: true }}\n    panes={panes}\n  />\n);\n\nexport default TabExampleVerticalTabular;\n","import React from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\nimport { Gallery } from \"./components/gallery.jsx\";\nimport TopHeader from \"./components/TopHeader.jsx\";\n\nimport Templates from \"./components/Templates.jsx\";\nimport Body from \"./components/Body\";\nfunction App() {\n  return (\n    <div>\n      <TopHeader />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}